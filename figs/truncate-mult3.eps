%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 488.834646 439.834646
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12 (Build 16A323) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 465 418
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 465 418
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Times-Roman
%!FontType1-1.0: Times-Roman 1.0000.0.0000
14 dict begin/FontName /Times-Roman def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /four put
dup 34 /five put
dup 35 /six put
dup 36 /seven put
dup 37 /eight put
dup 38 /nine put
dup 39 /one put
dup 40 /two put
dup 41 /underscore put
dup 42 /zero put
dup 43 /three put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -416 1 index div -877 2 index div 3482 3 index div 2604 5 -1 roll div]cvx def
/sfnts [<








00>] def
/CharStrings 15 dict dup begin
/.notdef 0 def
/zero 1 def
/one 2 def
/two 3 def
/three 4 def
/four 5 def
/five 6 def
/six 7 def
/seven 8 def
/eight 9 def
/nine 10 def
/underscore 11 def
/macron 12 def
/dcroat 13 def
/dong 14 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-416 -877 3482 2604}def
/UniqueID 4416489 def
currentdict currentfile eexec

A93D8F34060669AE8B2B33F9B0A6FBA5F5424881CCD8AB880CF2D9775FE95FC1886CB823E0EC7023FA0DA2075FFEB93FD344B2C07164FD30CD0F6FB2C2E2F480AF648823F63AECAD0AA14CEF2772FE09EAFCEE7A7319630F807BD92CA6BBD8BCCFFFD6B1B873F96C152FFBCDCDEA394AD5D934A0270CB647F6B61BBC2D1D3F4103CD511099FF024D82482349C0531C5F4BC487BB3B716A771427C075BAF064D2DDAF87A0160D54608E4279B47ED4CD9E67084AF5CCC13FF8E6104F1F8532E1E0F8BC5DFE23923AAF41DF56C5CC5E91A13BEF1CC090110083DD12692225EB0206F5D7346551A683043125F98AB513079E42B40684A5E440776C1785B0E309E0EE32FDE79E16FA8D6F9D4565692B18F5791FE282D7DC390E1D2619EE1A15741884A7132828691503D91D3945EDDF98387CBA72CD73AF10E5A48F061BBA4DF819240935BFFA54A18AC62477DE922DDE47FABFC84F20388DFED5F1C4BEA03501CECD5713A91DB23DE5450DA1FAE44F8ABA18EA141F2570D604B7C03E1EED77FEC2639C5675C63829A7181C4289743857C48EE32F1EC742DD025352187909710AC15EA04BB6D411B0F728A98D2C6AC58261D90B6F50F073B07BB5EA30562D0F7C569B3643DEDC8F4B49F75B7BD9BE4FA0311569F61414AF0B605CD9EF2FB47CD1EFC0CD231D473A1F894B2C15F052D3B65348BE9C20E4438F3684D8A18C9D57BA7250523BFE6CF66A1C24A65836E1B28D19C89ACABE2E8C7C7DC536083AFFDF674B637DF7315452E3E8DED24F46C5802D2610264B6197BB3AFB681B00CEDEB54DD89AD316AC90E740EEAB366EE40E22A52D55721B43F8C3330E392DE297956737F1643603FEBADAEFF75E0B9BF56F81CDE2EDB4B4D266973F0A6B54785F0DD64342FDA483DE6F9CE7D3535BE534BCF0C82EB646E52F74A37A5E8E0FC4F83A74FF2D5A79379B2E3B2AB1DFAD509B919CABFC3E4FBDFADE2B6887FF553CC709689C7953951C69A8425BF8BCAEB0B7ADF67927FAB7BEB453572B12473136F6A170B18D7E38B9EE5D17D4B556268B6C714FCB4DA9FB2159879F140DD8B71657548FDD7B03252CC69FF17F61B24AE75C9E5BE29CEA4A96AEE60AA08AED370620E6FB6031DD8D2A12F623C703F23A7DCBAA039425BE2FB33E3C68C2AEF6295DC0EA5FB9122924A21DA2170CBB7C6DDA99B06A53255EF4F1D2738FF724145389B1DE0833863F0C38AC0C980974933E81FB6F25A72C5D808B24692C284ED15B1C2E848EC952597A1005487B8A88F4253BC7CFA748B34ECAD40006C740B008AEF084351D0EBF27247502747D07F9E0CB9D7328EE6E25B87E950AB01D88A2B59060D529521B186FE8BD3DC059196F86D9549750F6F4B793046B1FE30F6D9582D2F4606842EC57FB0ADD058BCCD4B022D0487592B273F4F05F4E368389A7A71865401E124E5B629B

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Times-Roman cguidfix
/F1.1/Times-Roman renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 464.39291 417.8429 rc
-719.70355 707.19647 m
1474.7964 707.19647 l
1474.7964 -36.653542 l
-719.70355 -36.653542 l
h
-719.70355 707.19647 m
f
Q
7.5313802 w
1 M
0.60000002 i
/Cs2 SC
1 0.49145499 0.313721 sc
T soprm
q
1.9972399 416.36182 m
462.48541 416.36182 l
462.48541 1.6531538 l
1.9972399 1.6531538 l
h
1.9972399 416.36182 m
W
0 0 457.90747 417.8429 rc
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
1391.8 5240.3398 m
1692.6801 5500.1699 l
1090.92 5500.1699 l
h
S
0 0 0 sc
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
/F1.1[ 10.5439 0 0 10.5439 0 0]sf
133.53101 538.56897 m
(!")[ 5.648610 0.000000 ] xS
1 0.49145499 0.313721 sc
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
2355.8201 5240.3398 m
2656.7 5500.1699 l
2054.9399 5500.1699 l
h
S
0 0 0 sc
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
229.933 538.56897 m
(!#)[ 5.648610 0.000000 ] xS
1 0.49145499 0.313721 sc
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3184.27 5240.3398 m
3485.1399 5500.1699 l
2883.3899 5500.1699 l
h
S
0 0 0 sc
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
312.77802 538.56897 m
(!$)[ 5.648610 0.000000 ] xS
1 0.49145499 0.313721 sc
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3929.8799 5240.3398 m
4230.75 5500.1699 l
3629 5500.1699 l
h
S
0 0 0 sc
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
387.33899 538.56897 m
(!%)[ 5.648610 0.000000 ] xS
1 0.49145499 0.313721 sc
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4675.48 5240.3398 m
4976.3599 5500.1699 l
4374.6001 5500.1699 l
h
S
0 0 0 sc
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
461.89999 538.56897 m
(!&)[ 5.648610 0.000000 ] xS
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
1391.8 1881.34 m
1391.8 1956.21 1300.76 2016.9 1188.45 2016.9 c
1076.15 2016.9 985.10498 1956.21 985.10498 1881.34 c
985.10498 1806.47 1076.15 1745.77 1188.45 1745.77 c
1300.76 1745.77 1391.8 1806.47 1391.8 1881.34 c
S
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
115.833 185.347 m
($)s
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
1361 5179.3301 m
1329.8199 4930.6401 1286.36 4519.3599 1286.36 4163.3501 c
1286.36 4163.3501 1286.36 4163.3501 1286.36 2988.45 c
1286.36 2635.8301 1235.75 2222.0601 1207.36 2017.2 c
S
CM
37.555271 381.20273 m
40.946774 387.9848 l
42.520924 380.56622 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
1335.24 5185.8101 m
1370.9399 5257.2002 l
1387.51 5179.1099 l
h
S
7.5313802 w
2584.54 2367.4099 m
2584.54 2479.78 l
2424.1299 2559.1599 l
2197.1299 2559.1599 l
2036.71 2479.78 l
2036.71 2367.4099 l
2197.1299 2288.04 l
2424.1299 2288.04 l
h
S
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
217.506 239.573 m
('\(\)'*)[ 5.422669 5.422669 5.422669 5.422669 0.000000 ] xS
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
2348.8899 5167.6602 m
2342.26 4917.54 2333.22 4512.8799 2333.22 4163.3501 c
2333.22 4163.3501 2333.22 4163.3501 2333.22 3560.8401 c
2333.22 3197.8999 2321.3999 2769.5901 2314.8401 2559.8401 c
S
CM
131.35448 379.57159 m
134.05247 386.65479 l
136.35622 379.43478 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
2322.6001 5168.6401 m
2351 5243.2002 l
2375.25 5167.2002 l
h
S
7.5313802 w
3563.6299 3512.1799 m
3563.6299 3624.55 l
3403.2 3703.9299 l
3176.21 3703.9299 l
3015.79 3624.55 l
3015.79 3512.1799 l
3176.21 3432.8 l
3403.2 3432.8 l
h
S
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
315.414 354.04999 m
(\(!\)\(\()[ 5.422669 5.422669 5.422669 5.422669 0.000000 ] xS
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3197.8999 5169.46 m
3220.4199 4778.8101 3264.6299 4011.52 3282.1799 3705.96 c
S
CM
211.99617 379.71408 m
214.08617 386.99774 l
216.99792 380.00098 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3171.46 5170.1401 m
3193.46 5246.8101 l
3224.1101 5173.1602 l
h
S
7.5313802 w
4369.6299 4099.6299 m
4369.6299 4212 l
4209.0601 4291.3799 l
3982.0701 4291.3799 l
3821.5 4212 l
3821.5 4099.6299 l
3982.0701 4020.25 l
4209.0601 4020.25 l
h
S
4399.6099 4080.8799 m
4399.6099 4230.75 l
4216.0698 4321.5098 l
3975.0601 4321.5098 l
3791.52 4230.75 l
3791.52 4080.8799 l
3975.0601 3990.1299 l
4216.0698 3990.1299 l
h
S
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
396 412.79501 m
(+#\)+$)[ 5.422669 5.422669 5.422669 5.422669 0.000000 ] xS
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3959.8501 5180.9902 m
3992.99 4932.6802 4045.4099 4539.3901 4074.48 4321.5801 c
S
CM
284.40991 380.45795 m
285.94131 387.88504 l
289.36893 381.1239 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3933.71 5177.9702 m
3949.8301 5256.1499 l
3985.9099 5184.98 l
h
S
7.5313802 w
4827.6899 4788.4502 m
4827.6899 4872.7598 4759.54 4941.1099 4675.48 4941.1099 c
4591.4199 4941.1099 4523.27 4872.7598 4523.27 4788.4502 c
4523.27 4704.1401 4591.4199 4635.79 4675.48 4635.79 c
4759.54 4635.79 4827.6899 4704.1401 4827.6899 4788.4502 c
S
4857.8901 4788.4502 m
4857.8901 4889.5298 4776.2202 4971.46 4675.48 4971.46 c
4574.7402 4971.46 4493.0698 4889.5298 4493.0698 4788.4502 c
4493.0698 4687.3799 4574.7402 4605.4399 4675.48 4605.4399 c
4776.2202 4605.4399 4857.8901 4687.3799 4857.8901 4788.4502 c
S
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
461.89999 476.05899 m
(!!)[ 5.648610 0.000000 ] xS
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4675.48 5163.5898 m
4675.48 5099.2002 4675.48 5030.96 4675.48 4971.0098 c
S
CM
352.37387 379.13458 m
354.87808 386.28998 l
357.38226 379.13458 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4649.1201 5164.04 m
4675.48 5239.3599 l
4701.8398 5164.04 l
h
S
4499.7002 4593.77 m
4415.5 4504.0698 4315.9302 4398.02 4236.7002 4313.6699 c
S
CM
336.46896 326.79718 m
343.19403 330.29605 l
340.12457 323.36295 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4481.7002 4613.1201 m
4552.4902 4649.9502 l
4520.1802 4576.9702 l
h
S
7.5313802 w
4872.8799 4155.8198 m
4872.8799 4240.1299 4804.73 4308.48 4720.6699 4308.48 c
4636.6099 4308.48 4568.46 4240.1299 4568.46 4155.8198 c
4568.46 4071.51 4636.6099 4003.1599 4720.6699 4003.1599 c
4804.73 4003.1599 4872.8799 4071.51 4872.8799 4155.8198 c
S
4903.0801 4155.8198 m
4903.0801 4256.8901 4821.4102 4338.8301 4720.6699 4338.8301 c
4619.9302 4338.8301 4538.2598 4256.8901 4538.2598 4155.8198 c
4538.2598 4054.74 4619.9302 3972.8 4720.6699 3972.8 c
4821.4102 3972.8 4903.0801 4054.74 4903.0801 4155.8198 c
S
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
466.418 412.79501 m
(!')[ 5.648610 0.000000 ] xS
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4693.8599 4529.98 m
4698.5298 4465.96 4703.5 4398.48 4707.79 4339.1299 c
S
CM
354.11996 318.76208 m
356.09503 326.08185 l
359.11411 319.12784 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4667.5 4528.54 m
4688.29 4605.5898 l
4720.0698 4532.3901 l
h
S
3851.9299 3975.29 m
3718.9199 3880.77 3558.28 3766.6699 3442.8899 3684.6499 c
S
CM
275.32413 268.33514 m
282.60681 270.43179 l
278.22162 264.25015 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3838.0701 3997.73 m
3914.73 4019.8 l
3868.5701 3954.73 l
h
S
7.5313802 w
4987.0498 3512.1799 m
4987.0498 3624.55 l
4826.6401 3703.9299 l
4599.6401 3703.9299 l
4439.2202 3624.55 l
4439.2202 3512.1799 l
4599.6401 3432.8 l
4826.6401 3432.8 l
h
S
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
457.75699 354.04999 m
(\(&\)\($)[ 5.422669 5.422669 5.422669 5.422669 0.000000 ] xS
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4309 3950.4299 m
4399.9102 3866.1599 4503.0898 3770.5901 4582.3901 3697.0801 c
S
CM
318.13873 262.21808 m
314.58951 268.91464 l
321.54352 265.88889 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4288.75 3933.3401 m
4251.3901 4003.8301 l
4324.5898 3971.98 l
h
S
7.5313802 w
4645.3599 1881.34 m
4645.3599 1956.21 4554.3101 2016.9 4442.0098 2016.9 c
4329.7002 2016.9 4238.6602 1956.21 4238.6602 1881.34 c
4238.6602 1806.47 4329.7002 1745.77 4442.0098 1745.77 c
4554.3101 1745.77 4645.3599 1806.47 4645.3599 1881.34 c
S
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
438.552 185.347 m
(+*)[ 5.648610 0.000000 ] xS
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4131.5698 3913.3799 m
4204.0898 3440.3401 4365.71 2386.7 4422.1299 2018.71 c
S
CM
300.70908 260.09293 m
302.09702 267.54092 l
305.66046 260.85104 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4105.2798 3910.97 m
4119.8901 3989.3701 l
4157.3999 3918.95 l
h
S
4717.3599 3897.27 m
4716.4502 3830.6101 4715.5498 3761.3201 4714.79 3704.23 c
S
CM
356.35248 258.90543 m
358.94977 266.02475 l
361.35992 258.84085 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4691 3898.47 m
4718.3398 3973.4099 l
4743.71 3897.79 l
h
S
7.5313802 w
5729.8799 1881.34 m
5729.8799 1956.21 5638.8301 2016.9 5526.5298 2016.9 c
5414.2202 2016.9 5323.1802 1956.21 5323.1802 1881.34 c
5323.1802 1806.47 5414.2202 1745.77 5526.5298 1745.77 c
5638.8301 1745.77 5729.8799 1806.47 5729.8799 1881.34 c
S
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
547.00403 185.347 m
(+%)[ 5.648610 0.000000 ] xS
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4888.02 3957.8201 m
4946.9102 3882.8799 5009.0498 3793.4099 5052.0498 3703.9299 c
5337.1899 3110.99 5467.7798 2323.73 5510.1802 2017.96 c
S
CM
373.06583 263.0408 m
370.49036 270.17435 l
376.95038 266.20334 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4866.9302 3942 m
4839.8198 4017.0901 l
4907.8198 3975.29 l
h
S
7.5313802 w
3631.55 2939.8 m
3631.55 3052.1699 l
3470.99 3131.55 l
3243.99 3131.55 l
3083.4199 3052.1699 l
3083.4199 2939.8 l
3243.99 2860.4199 l
3470.99 2860.4199 l
h
S
3661.53 2921.05 m
3661.53 3070.9199 l
3477.99 3161.6699 l
3236.99 3161.6699 l
3053.45 3070.9199 l
3053.45 2921.05 l
3236.99 2830.29 l
3477.99 2830.29 l
h
S
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
322.19299 296.81201 m
(\(*\)\(")[ 5.422669 5.422669 5.422669 5.422669 0.000000 ] xS
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3314.79 3354.8601 m
3322.54 3291.1399 3330.8999 3221.9299 3338.21 3161.8999 c
S
CM
223.10072 207.14754 m
224.72522 214.5528 l
228.07397 207.74889 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3288.3501 3353.6499 m
3305.45 3431.6001 l
3340.7 3359.98 l
h
S
7.5313802 w
3018.5801 1881.34 m
3018.5801 1956.21 2927.54 2016.9 2815.23 2016.9 c
2702.9299 2016.9 2611.8799 1956.21 2611.8799 1881.34 c
2611.8799 1806.47 2702.9299 1745.77 2815.23 1745.77 c
2927.54 1745.77 3018.5801 1806.47 3018.5801 1881.34 c
S
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
275.875 185.347 m
(\(')[ 5.648610 0.000000 ] xS
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3115.6599 3377.98 m
3064.1399 3314.1101 3013 3238.95 2980.9199 3161.6699 c
2817.5701 2768.6899 2805.74 2253.6101 2810.26 2017.36 c
S
CM
204.79233 211.0891 m
211.33118 214.91759 l
208.60562 207.84103 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3095.6299 3395.1399 m
3164.46 3435.4399 l
3135.77 3360.95 l
h
S
4434.7002 3446.3601 m
4188.8799 3345.29 3834.0701 3199.4099 3599.77 3103.0801 c
S
CM
331.32471 218.38699 m
338.89432 218.78789 l
333.22757 213.75099 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4427.5498 3471.96 m
4507.23 3476.1799 l
4447.5801 3423.1599 l
h
S
7.5313802 w
5187.6099 1881.34 m
5187.6099 1956.21 5096.5698 2016.9 4984.27 2016.9 c
4871.96 2016.9 4780.9199 1956.21 4780.9199 1881.34 c
4780.9199 1806.47 4871.96 1745.77 4984.27 1745.77 c
5096.5698 1745.77 5187.6099 1806.47 5187.6099 1881.34 c
S
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
492.77802 185.347 m
(\(#)[ 5.648610 0.000000 ] xS
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4746.0498 3357.79 m
4802.6099 3009.24 4916.48 2306.8601 4963.4102 2017.73 c
S
CM
359.10651 207.16939 m
360.43747 214.63164 l
364.05127 207.97025 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4719.9902 3353.8799 m
4734 3432.4299 l
4772.04 3362.3101 l
h
S
3074.99 2838.05 m
2890.0901 2739.6101 2653.8301 2613.8401 2493.26 2528.3601 c
S
CM
201.80836 160.46265 m
209.30577 161.61404 l
204.16248 156.04039 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3064.22 2862.23 m
3143.1399 2874.3501 l
3089 2815.6799 l
h
S
7.5313802 w
4103.1001 1881.34 m
4103.1001 1956.21 4012.05 2016.9 3899.75 2016.9 c
3787.45 2016.9 3696.3999 1956.21 3696.3999 1881.34 c
3696.3999 1806.47 3787.45 1745.77 3899.75 1745.77 c
4012.05 1745.77 4103.1001 1806.47 4103.1001 1881.34 c
S
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
384.32599 185.347 m
('+)[ 5.648610 0.000000 ] xS
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3470.6101 2759.05 m
3582.8301 2531.6001 3750.3301 2191.78 3839.27 2011.55 c
S
CM
238.07558 149.73714 m
237.15977 157.26399 l
242.56908 151.95538 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3445.98 2749.3301 m
3436.3401 2828.5601 l
3493.28 2772.6799 l
h
S
7.5313802 w
3560.8401 1881.34 m
3560.8401 1956.21 3469.79 2016.9 3357.49 2016.9 c
3245.1799 2016.9 3154.1399 1956.21 3154.1399 1881.34 c
3154.1399 1806.47 3245.1799 1745.77 3357.49 1745.77 c
3469.79 1745.77 3560.8401 1806.47 3560.8401 1881.34 c
S
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
330.10001 185.347 m
('!)[ 5.648610 0.000000 ] xS
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3357.49 2750.99 m
3357.49 2526.3999 3357.49 2197.73 3357.49 2018.04 c
S
CM
227.16483 150.10954 m
229.66902 157.26399 l
232.17322 150.10954 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3331.1299 2753.25 m
3357.49 2828.5601 l
3383.8501 2753.25 l
h
S
7.5313802 w
2476.3201 1881.34 m
2476.3201 1956.21 2385.27 2016.9 2272.97 2016.9 c
2160.6699 2016.9 2069.6299 1956.21 2069.6299 1881.34 c
2069.6299 1806.47 2160.6699 1745.77 2272.97 1745.77 c
2385.27 1745.77 2476.3201 1806.47 2476.3201 1881.34 c
S
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
224.284 185.347 m
(%)s
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
2295.9399 2210.23 m
2291.27 2145.3101 2286.3 2075.5701 2282.1599 2017.66 c
S
CM
126.32517 98.737343 m
129.33002 105.69894 l
131.31932 98.380142 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
2269.6599 2212.49 m
2301.29 2285.77 l
2322.23 2208.73 l
h
S
7.5313802 w
1934.0601 1881.34 m
1934.0601 1956.21 1843.02 2016.9 1730.71 2016.9 c
1618.41 2016.9 1527.36 1956.21 1527.36 1881.34 c
1527.36 1806.47 1618.41 1745.77 1730.71 1745.77 c
1843.02 1745.77 1934.0601 1806.47 1934.0601 1881.34 c
S
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
170.05901 185.347 m
(&)s
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
2121.8899 2244.5 m
2030.99 2161.8101 1924.87 2065.3301 1846.09 1993.78 c
S
CM
110.73472 103.75334 m
117.71722 106.71544 l
114.10437 100.04739 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
2105.55 2265.29 m
2179.05 2296.47 l
2141.02 2226.28 l
h
S
7.5313802 w
1 0.49145499 0.313721 sc
1730.71 1474.64 m
1494.98 1214.8101 l
1966.45 1214.8101 l
h
S
0 0 0 sc
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
170.05901 127.355 m
(')s
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
1345.55 1710.15 m
1445.65 1605.84 1571.12 1475.17 1651.11 1391.88 c
S
CM
36.689823 49.31929 m
33.541523 56.216293 l
40.302673 52.789642 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
1326.13 1692.3 m
1292.99 1764.9 l
1364.16 1728.83 l
h
S
7.5313802 w
1 0.49145499 0.313721 sc
3899.75 1474.64 m
3664.02 1214.8101 l
4135.48 1214.8101 l
h
S
0 0 0 sc
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
386.96301 127.355 m
(!)s
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
1415.37 1760.46 m
1430.13 1754.96 1444.97 1750.0699 1459.58 1745.77 c
2379.54 1477.58 2687.27 1771 3598.49 1474.64 c
3672.3 1450.62 3748.8201 1408.29 3806.29 1372.45 c
S
CM
43.923122 53.598091 m
38.277271 58.66349 l
45.847824 58.219841 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
1402.27 1737.34 m
1342.84 1790.66 l
1422.53 1785.99 l
h
S
7.5313802 w
1 0.49145499 0.313721 sc
2694.73 1474.64 m
2459 1214.8101 l
2930.46 1214.8101 l
h
S
0 0 0 sc
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
266.45999 127.355 m
(\()s
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
2405.45 1696.37 m
2477.8999 1599.36 2564.73 1483.08 2624.23 1403.4 c
S
CM
137.21503 48.21064 m
134.93977 55.443943 l
141.22878 51.207893 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
2384.29 1680.63 m
2360.3401 1756.77 l
2426.54 1712.1801 l
h
S
2501.7 1762.12 m
2515.9299 1756.3199 2530.1699 1750.8199 2544.1001 1745.77 c
2999.22 1581.52 3148.6399 1652.91 3598.49 1474.64 c
3669.52 1446.48 3744.8301 1405.05 3802.3701 1370.71 c
S
CM
147.24608 53.712093 m
141.69333 58.87059 l
149.24867 58.298691 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
2489.8799 1738.54 m
2431.4299 1792.84 l
2510.96 1786.8199 l
h
S
1730.71 1669.11 m
1730.71 1605.39 1730.71 1535.95 1730.71 1475.25 c
S
CM
72.62072 47.23024 m
75.124924 54.385643 l
77.62912 47.23024 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
1704.35 1670.3101 m
1730.71 1745.63 l
1757.0699 1670.3101 l
h
S
7.5313802 w
1 0.49145499 0.313721 sc
4502.2598 1474.64 m
4266.5298 1214.8101 l
4737.9902 1214.8101 l
h
S
0 0 0 sc
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
447.21301 127.355 m
(")s
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
1957.63 1760.39 m
1972.39 1754.96 1987.23 1749.99 2001.84 1745.77 c
2947.78 1471.78 3263.95 1777.63 4201 1474.64 c
4274.8101 1450.77 4351.4102 1408.45 4408.7998 1372.52 c
S
CM
95.43782 53.590492 m
89.792923 58.656841 l
97.362518 58.213192 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
1944.53 1737.26 m
1885.11 1790.59 l
1964.79 1785.92 l
h
S
7.5313802 w
1 0.49145499 0.313721 sc
3297.24 1474.64 m
3061.51 1214.8101 l
3532.97 1214.8101 l
h
S
0 0 0 sc
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
326.711 127.355 m
(+)s
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3729.77 1714.45 m
3615.0601 1606.89 3468.8 1469.8199 3379.1799 1385.77 c
S
CM
263.48236 53.404293 m
270.41547 56.467091 l
266.90997 49.748692 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3713.4199 1735.3 m
3786.3999 1767.54 l
3749.5 1696.8199 l
h
S
3899.75 1669.11 m
3899.75 1605.39 3899.75 1535.95 3899.75 1475.25 c
S
CM
278.67953 47.23024 m
281.18372 54.385643 l
283.68793 47.23024 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3873.3899 1670.3101 m
3899.75 1745.63 l
3926.1101 1670.3101 l
h
S
3176.0601 1719.1899 m
3046.97 1609.16 2879.25 1466.21 2779.76 1381.41 c
S
CM
211.05186 53.984741 m
218.12082 56.717892 l
214.29993 50.17049 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3161.52 1741.41 m
3235.9299 1770.1801 l
3195.71 1701.26 l
h
S
3586.97 1765.4301 m
3831.52 1649.9 4185.9399 1482.33 4201 1474.64 c
4269.0098 1439.85 4344.3301 1398.4301 4402.7002 1365.74 c
S
CM
250.33247 54.034142 m
244.92982 59.356991 l
252.47186 58.56374 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3575 1741.9301 m
3518.1299 1797.96 l
3597.52 1789.61 l
h
S
2592 1757.6 m
2359.96 1636.72 2006.8101 1452.8 1833.74 1362.58 c
S
CM
155.88821 57.79044 m
163.39417 58.87059 l
158.20622 53.34729 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
2580.8501 1781.47 m
2659.8601 1792.84 l
2605.25 1734.7 l
h
S
7.5313802 w
1 0.49145499 0.313721 sc
5104.77 1474.64 m
4869.04 1214.8101 l
5340.5 1214.8101 l
h
S
0 0 0 sc
0.94999999 0 0 0.94999999 -89.292526 -111.4492 cm
507.46399 127.355 m
(#)s
15.0628 w
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3042.3 1760.99 m
3057.0601 1755.41 3071.8201 1750.29 3086.3601 1745.77 c
3824.73 1518.25 4072.52 1724.84 4803.52 1474.64 c
4876.9502 1449.49 4953.46 1407.16 5011 1371.61 c
S
CM
198.46722 53.65509 m
192.85081 58.749943 l
200.41283 58.270191 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
3029.05 1737.9399 m
2969.9299 1791.5699 l
3049.53 1786.52 l
h
S
4756.75 1762.34 m
4742.1299 1756.47 4727.52 1750.8199 4713.1401 1745.77 c
4232.48 1575.79 4073.72 1659.39 3598.49 1474.64 c
3527.25 1446.9301 3451.9299 1405.51 3394.47 1371.01 c
S
CM
361.89001 58.399391 m
369.44537 58.963692 l
363.89355 53.805191 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4749.29 1787.88 m
4828.8198 1793.8199 l
4770.3799 1739.52 l
h
S
4836.2798 1700.36 m
4750.6401 1600.04 4646.5601 1478.04 4577.5698 1397.14 c
S
CM
368.40036 51.888092 m
374.94681 55.701393 l
372.20703 48.632442 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4817.8198 1719.34 m
4886.73 1759.48 l
4857.8901 1685.0699 l
h
S
4214.5601 1762.12 m
4199.8799 1756.3199 4185.2598 1750.75 4170.8799 1745.77 c
3664.6201 1570.0699 3496.5901 1665.87 2995.98 1474.64 c
2924.5901 1447.38 2849.27 1405.96 2791.8101 1371.39 c
S
CM
310.38293 58.377541 m
317.94492 58.935192 l
312.37888 53.78429 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4207.1099 1787.65 m
4286.71 1793.52 l
4228.1201 1739.3 l
h
S
4623.4399 1719.1899 m
4752.5298 1609.16 4920.25 1466.21 5019.7402 1381.41 c
S
CM
348.06656 50.17049 m
344.24661 56.717892 l
351.31558 53.984741 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
4603.7798 1701.26 m
4563.5698 1770.1801 l
4637.98 1741.41 l
h
S
5299.46 1761.0601 m
5284.7002 1755.49 5269.9302 1750.29 5255.3999 1745.77 c
4542.9302 1524.05 4303.8101 1718.21 3598.49 1474.64 c
3525.1399 1449.34 3448.6201 1407.01 3391 1371.46 c
S
CM
413.46173 58.27684 m
421.03131 58.763241 l
415.41492 53.669342 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
5292.1499 1786.59 m
5371.8301 1791.71 l
5312.71 1738.09 l
h
S
5394.0498 1696.37 m
5321.6001 1599.36 5234.7598 1483.08 5175.2598 1403.4 c
S
CM
421.13867 51.207893 m
427.42767 55.443943 l
425.1524 48.21064 l
f
0.094999999 0 0 0.094999999 -89.292526 -111.4492 cm
5372.96 1712.1801 m
5439.1602 1756.77 l
5415.21 1680.63 l
h
S
ep
end
