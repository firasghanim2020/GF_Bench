44c44
< \title{Fast Algebraic Rewriting Based on And-Inverter Graphs}
---
> \title{Fast Algebraic Rewriting based on And-Inv-Graphs}
63c63
< \author{\IEEEauthorblockN{Cunxi~Yu,~\IEEEmembership{Student Member,~IEEE}, Maciej Ciesielski,~\IEEEmembership{Senior Member,~IEEE}, and \\Alan Mishchenko,~\IEEEmembership{Senior Member,~IEEE}}\\
---
> \author{\IEEEauthorblockN{Cunxi~Yu,~\IEEEmembership{Student Member,~IEEE,}, Maciej Ciesielski,~\IEEEmembership{Senior Member,~IEEE,} and \\Alan Mishchenko ,~\IEEEmembership{Member,~IEEE,}}\\
65c65
< \thanks{A. Mishchenko is with EECS Department at University of California, Berkeley, Berkeley, CA 94720 (alanmi@berkeley.edu)}
---
> \thanks{A. Mishchenko is with EECS Department at University of California, Berkeley, Berkeley, CA 94720 (alanmi@eecs.berkeley.edu)}
85c85
< Constructing algebraic polynomials using computer algebra techniques is believed to be state-of-the-art in analyzing gate-level arithmetic circuits. However, the existing approach applies algebraic rewriting directly to a gate-level netlist, which has potential memory explosion problem. This paper introduces an algebraic rewriting technique based on the And-Inverter Graph (AIG) representation of gate-level designs. Using AIG-based cut-enumeration and truth table computation, an efficient order of algebraic rewriting is identified, resulting in dramatic simplifications of the polynomial under construction. An automatic approach, which further reduces the complexity of algebraic rewriting by handling redundant polynomials, is also proposed. 
---
> Computer algebra method with polynomial representations is believed to be the state-of-the-art technique for analyzing gate-level arithmetic circuits. However, the existing approach applies algebraic rewriting directly on the gate-level netlist, which has potential memory explosion problem. In this paper, an algebraic rewriting technique, through the AIGs of the gate-level design, is introduced. Using the AIG-based structural hashing, an efficient order of rewriting, that provides the maximum polynomial reductions during the rewriting process is identified. This approach is based on detecting the pairs of Majority3 and XOR3 functions in AIGs. An automatic approach which reduces the complexity of algebraic rewriting and generates redundant polynomials is proposed. 
104c104
< This paper presented a method to improve the efficiency of algebraic rewriting used in arithmetic verification. The method is based on the representation of the Boolean network called an And-Inverter Graph (AIG). This approach allows for formal verification of practical multipliers that are heavily optimized and mapped using 14nm technology library. Another contribution of the paper is a technique that automatically detects redundant polynomials to reduce the complexity of algebraic rewriting.
---
> We propose an approach presented that aims at improving the efficiency of algebraic rewriting for arithmetic verification, using a Directed-Acyclic-graph (DAG) representation of the Boolean network, called And- Inverter-Graph (AIG). With this approach, we address the formal verification problem of practical multipliers that are heavily optimized and mapped using 14nm technology library. Also, an approach that automatically detects redundant polynomials to reduce the complexity of algebraic rewriting is proposed.
108,109c108
< This work was supported by an award from National Science Foundation, No. CCF-1319496 and No. CCF-1617708. The co-author affiliated with UC Berkeley was supported in part by NSA grant ``Enhanced equivalence checking in
< crypto-analytic applications''.
---
> This work was supported by an award from National Science Foundation, No. CCF-1319496 and No. CCF-1617708. 
117d115
< 
